// Code generated by mockery v2.49.1. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// NotifRepo is an autogenerated mock type for the NotifRepo type
type NotifRepo struct {
	mock.Mock
}

// NotifEmail provides a mock function with given fields: subject, to, body
func (_m *NotifRepo) NotifEmail(subject string, to []string, body string) error {
	ret := _m.Called(subject, to, body)

	if len(ret) == 0 {
		panic("no return value specified for NotifEmail")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string, []string, string) error); ok {
		r0 = rf(subject, to, body)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewNotifRepo creates a new instance of NotifRepo. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewNotifRepo(t interface {
	mock.TestingT
	Cleanup(func())
}) *NotifRepo {
	mock := &NotifRepo{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
